# monitoring
management:
  endpoints:
    web:
      exposure:
        include: prometheus
    enabled-by-default: true
  endpoint:
    health:
      show-details: always

server:
  port: 8098

retryConfirmingTransactionDelayTime: 5000 # miliseconds

kafka:
  auto-create-topics: true
  admin:
    bootstrapServers: localhost:9093
  topics:
    jobRetry:
      name: test.job.retry
      partitions: 1
      replicationFactor: 1

    jobSchedule:
      name: test.job.schedule
      partitions: 1
      replicationFactor: 1

    confirmingTransaction:
      name: test.transaction.confirming
      partitions: 1
      replicationFactor: 1
      configs:
        retryCountForUnexpectedError: -1 # -1 is mean Long.maxValue for infinite retry.
      retryableTopic:
        attemptCounts: 2
        autoCreateRetryTopics: true
        reconfirmDelayMilliseconds: 3000
        replicationFactor: 1

    deadLetter:
      name: test.job.dead.letter
      partitions: 1
      replicationFactor: 1

  producers:
    json-producer:
      clientId: json-producer
      retries: 3
      bootstrapServers: localhost:9093
      maxInFlightRequestsPerConnection: 1
      requestTimeoutMs: 30000
      batchSize: 16384
      lingerMs: 5
      bufferMemory: 33554432
      acks: all
      enableIdempotence: true
      keySerializer: org.apache.kafka.common.serialization.StringSerializer
      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
  consumers:
    json-consumer:
      clientId: json-consumer
      bootstrapServers: localhost:9093
      keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      autoOffsetReset: earliest
      enableAutoCommit: false
      autoCommitIntervalMs: 1000
      sessionTimeoutMs: 30000
      trustedPackages: "*"
      allowAutoCreateTopics: false
      groupId: job
      concurrency: 10
      pollTimeout: 3600000

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://localhost:54324/state_storage?reWriteBatchedInserts=true&currentSchema=public
    username: proofoforiginadmin
    password: originateDoNotUseInProduction
    driver-class-name: org.postgresql.Driver
  # JPA specific configs
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        '[jdbc.batch_size]': 1000
        '[default_schema]': public
        '[show_sql]': false
        '[format_sql]': true
        '[order_inserts]': true
        '[order_updates]': true

logging:
  level:
    com.cardano: ${LOG:TRACE}